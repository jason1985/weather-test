{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","main","sys","weather","hourly","setHourly","daily","setDaily","console","log","process","useEffect","axios","get","params","lat","lon","units","exclude","appid","then","data","map","hour","number","dt","Date","toLocaleTimeString","temp","Math","round","pop","day","toLocaleDateString","max","min","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAuEeA,MAlDf,WAAgB,IAAD,EACYC,mBAAS,CAACC,KAAM,GAAGC,IAAK,GAAGC,QAAS,CAAC,CAACF,KAAK,OADvD,gCAEcD,mBAAS,KAFvB,mBAENI,EAFM,KAECC,EAFD,OAGaL,mBAAS,IAHtB,mBAGNM,EAHM,KAGCC,EAHD,KA4Bb,OAvBAC,QAAQC,IAAIC,oCACZC,qBAAU,WACRC,IAAMC,IAvBU,mDAuBO,CACrBC,OAAO,CAELC,IAAK,QACLC,IAAK,SACLC,MAAO,WACPC,QAAS,WACTC,MAAOT,sCAGVU,MAAK,YAAY,IAAVC,EAAS,EAATA,KACNb,QAAQC,IAAIY,GACZhB,EAAUgB,EAAKjB,QACfG,EAASc,EAAKf,YAMhB,IAGA,qCACA,iDAEEF,EAAOkB,KAAI,SAACC,GAAD,OACT,yCA/CUC,EAgDKD,EAAKE,GA/CtBD,EAGG,IAAIE,KAAc,IAATF,GAAeG,mBAAmB,SAFzC,IA6CH,kBACiCJ,EAAKK,KADtC,4BAC8DC,KAAKC,MAAiB,IAAXP,EAAKQ,KAD9E,OA/CR,IAAkBP,KAoDd,gDAEElB,EAAMgB,KAAI,SAACU,GAAD,OACR,yCAhDUR,EAiDKQ,EAAIP,GAhDrBD,EAGG,IAAIE,KAAc,IAATF,GAAeS,mBAAmB,SAFzC,IA8CH,kBACgCJ,KAAKC,MAAME,EAAIJ,KAAKM,KADpD,iBACiEL,KAAKC,MAAME,EAAIJ,KAAKO,QAjD7F,IAAkBX,SCFHY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f4f5e22b.chunk.js","sourcesContent":["import axios from 'axios'\nimport {useEffect, useState} from 'react'\n\n\nconst URL = \"https://api.openweathermap.org/data/2.5/weather?\"\nconst URL_ONECALL = \"https://api.openweathermap.org/data/2.5/onecall?\"\n\nfunction UnixTime(number) {\n  if(!number){\n    return \"\"\n  }\n  return new Date(number * 1000).toLocaleTimeString(\"en-US\")\n}\n\nfunction UnixDate(number) {\n  if(!number){\n    return \"\"\n  }\n  return new Date(number * 1000).toLocaleDateString(\"en-US\")\n}\n\nfunction App() {\n  const [peeps,setPeeps] = useState({main: \"\",sys: \"\",weather: [{main:\"\"}]})\n  const [hourly,setHourly] = useState([])\n  const [daily, setDaily] = useState([])\n\n  console.log(process.env.REACT_APP_APIKEY)\n  useEffect(() => {\n    axios.get(URL_ONECALL, {\n      params:{\n        // q: \"ho chi minh\",\n        lat: 10.8231,\n        lon: 106.6297,\n        units: \"imperial\",\n        exclude: \"minutely\",\n        appid: process.env.REACT_APP_APIKEY\n      }\n    })\n    .then(({data})=> {\n      console.log(data)\n      setHourly(data.hourly)\n      setDaily(data.daily)\n\n    })\n\n\n\n  },[])\n\n  return(\n    <>\n    <h1>hourly forecast</h1>\n    {\n      hourly.map((hour) => (\n        <div>\n          {`${UnixTime(hour.dt)} Temp: ${hour.temp} Chance of rain: ${Math.round(hour.pop * 100)}%`}\n        </div>\n      ))\n    }\n    <h1>8 day forecast</h1>\n    {\n      daily.map((day) => (\n        <div>\n          {`${UnixDate(day.dt)} High: ${Math.round(day.temp.max)} Low: ${Math.round(day.temp.min)}`}\n        </div>\n      ))\n    }\n    </>\n  )\n}\n\nexport default App;\n\n\n\n\n\n\n// temp: {peeps.main.temp}\n// <br />\n// pressure: {peeps.main.pressure}\n// <br />\n// humidity: {peeps.main.humidity}\n// <br />\n// Sunrise: {UnixTime(Number(peeps.sys.sunrise))}\n// <br />\n// Sunset: {UnixTime(Number(peeps.sys.sunset))}\n// <br />\n// Weather: {peeps.weather[0].main}\n// <br />\n// icon: <img src={`http://openweathermap.org/img/wn/${peeps.weather[0].icon}@2x.png`}></img>","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}